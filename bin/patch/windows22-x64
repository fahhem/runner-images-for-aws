#!/bin/bash

set -eo pipefail

RELEASE_DIR="$1"

if [ -z "$RELEASE_DIR" ]; then
  echo "Usage: $0 <RELEASE_DIR>"
  exit 1
fi

release_dir="$RELEASE_DIR"
build_dir="$release_dir/images/windows/scripts/build"
toolsets_dir="$release_dir/images/windows/toolsets"
TOOLSET_PATH="$toolsets_dir/toolset-2022.json"

# custom stuff
# mkdir -p $release_dir/images/windows/custom
# cp -r patches/windows/files $release_dir/images/windows/custom/

# Save ~3.2GB by removing default docker images

if false; then
  yq -oj -i '.docker.images = []' $TOOLSET_PATH

  # Use official runners for CodeQL
  yq -oj -i 'del(.toolcache[] | select(.name == "CodeQL"))' $TOOLSET_PATH

  # only keep 4 last python version
  yq -oj -i 'eval(.toolcache[] | select(.name == "Python") | .versions |= [.[-4],.[-3],.[-2],.[-1]])' $TOOLSET_PATH
  # yq -oj -i 'eval(.toolcache[] | select(.name == "Python") | .versions |= [.[-1]])' $TOOLSET_PATH

  # only keep one last pypy version
  yq -oj -i 'eval(.toolcache[] | select(.name == "PyPy") | .versions |= [.[-1]])' $TOOLSET_PATH
  # only keep one last go version
  yq -oj -i 'eval(.toolcache[] | select(.name == "go") | .versions |= [.[-1]])' $TOOLSET_PATH
  yq -oj -i 'eval(.toolcache[] | select(.name == "go") | .default |= (parent | .versions[-1]))' $TOOLSET_PATH

  # only keep latest dotnet version
  yq -oj -i 'eval(.dotnet | .aptPackages |= [.[-1]])' $TOOLSET_PATH
  yq -oj -i 'eval(.dotnet | .versions |= [.[-1]])' $TOOLSET_PATH
  # remove PSScriptAnalyzer
  yq -oj -i 'eval(del(.powershellModules[] | select(.name == "PSScriptAnalyzer")))' $TOOLSET_PATH

  # only keep the default java version (use action to install additional, adds 5s)
  yq -oj -i 'eval(.java | .versions |= [(parent | .default)])' $TOOLSET_PATH
  # only keep the default android ndk version
  yq -oj -i 'eval(.android.ndk | .versions |= [(parent | .default)])' $TOOLSET_PATH

  # only keep yarn
  yq -oj -i 'del(.node_modules[] | (select(.name != "yarn" and .name != "typescript")))' $TOOLSET_PATH

  yq -oj -i 'del(.azureModules[])' $TOOLSET_PATH
fi

# finally, copy over the packer template
cp patches/windows/templates/windows22-full-x64.pkr.hcl "$release_dir/images/windows/templates/"